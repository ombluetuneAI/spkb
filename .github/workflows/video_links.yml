#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build video_link

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_WETRANSFER: false
  UPLOAD_KSTORE: true
  UPLOAD_RELEASE: false
  KSTORE_TOKEN: ${{ secrets.KSTORE_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      run: |
        # sudo -E apt-get install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get install curl
        sudo pip3 install bs4
        sudo pip3 install fake_useragent
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        ls
        sudo mkdir -p openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: run spider
      run: |
        sudo cp video/* openwrt/ -r
        cd openwrt
        sudo wget https://download.kstore.space/download/3524/spkb/video_pages.csv
        sudo python3 video_links.py
        ls

    
    - name: Upload firmware to KStore
      id: KStore
      run: |
        cd openwrt
        ls
        sudo 7z a -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on video_links.7z ./
        ls

        # 查找firmware目录id
        firmware_dir_id=$(curl -X POST -d "path=spkb/"  https://api.kstore.space/api/v1/file/search/path?access_token=${{ secrets.KSTORE_TOKEN }} | jq ".data.id")
        echo $firmware_dir_id

        #上传album.csv文件，开启直链
        upload_file_id=$(curl https://upload.kstore.space/upload/$firmware_dir_id?access_token=${{ secrets.KSTORE_TOKEN }} -F "file=@./album.csv" | jq ".data.id")
        echo $upload_file_id
        curl -X POST -d "fileId=$upload_file_id&isDirect=1" https://api.kstore.space/api/v1/file/direct?access_token=${{ secrets.KSTORE_TOKEN }} | jq "."

        #上传video_links.7z文件，开启直链
        upload_file_id=$(curl https://upload.kstore.space/upload/$firmware_dir_id?access_token=${{ secrets.KSTORE_TOKEN }} -F "file=@./video_links.7z" | jq ".data.id")
        echo $upload_file_id
        curl -X POST -d "fileId=$upload_file_id&isDirect=1" https://api.kstore.space/api/v1/file/direct?access_token=${{ secrets.KSTORE_TOKEN }} | jq "."

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
